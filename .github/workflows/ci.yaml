# This is a Github Workflow that runs tests on any push or pull request.
# If the tests pass and this is a push to the master branch it also runs Semantic Release.
name: CI
on: [push, pull_request]
jobs:
  push:
    name: Push ${{ github.ref }}
    if: github.event_name == 'push'
    runs-on: ubuntu-22.04
    permissions:
      checks: read
      statuses: write
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ github.ref == 'refs/heads/master' && '0' || '1' }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          # cache: 'yarn'

      - name: Fetch deps
        run: yarn --mutex network --frozen-lockfile --network-concurrency 25 --silent --disable-self-update-check

      - name: Build
        run: yarn build

      - name: Run tests
        run: yarn test

      - name: Codeclimate
        if: github.ref == 'refs/heads/master'
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/target/coverage/lcov.info:lcov

      - name: Semantic Release
        if: github.ref == 'refs/heads/master'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_PROVENANCE: true
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
        run: npm_config_yes=true npx zx-semrel

  pr:
    if: github.event_name == 'pull_request'
    name: PR (Node v${{ matrix.node-version }}, OS ${{ matrix.os }})
    strategy:
      matrix:
        os: [ ubuntu-22.04, windows-latest ]
        node-version: [ 20, 18, 16, 14 ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Fetch deps
        run: yarn --mutex network --frozen-lockfile --network-concurrency 25 --silent --disable-self-update-check

      - name: Build
        run: yarn build

      - name: Switch Node.js to ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run all tests
        if: matrix.node-version == '20' && matrix.os == 'ubuntu-22.04'
        run: yarn test

      - name: Run integration tests
        if: matrix.node-version != '20' || matrix.os != 'ubuntu-22.04'
        run: yarn test:integration

  post-release:
    name: Post-release
    needs: push
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-22.04
    steps:
      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 14 # the lowest required

      - name: Check running via npx
        run: npm_config_yes=true npx yarn-audit-fix@latest --version

      - name: Check global install
        run: |
          npm i -g yarn-audit-fix@latest
          which yarn-audit-fix
          yarn-audit-fix --version
